#include <WiFi.h>
#include <PubSubClient.h>


const char* ssid = "WIABREU";
const char* password = "feluma03";

// ======= CONFIGURAÇÕES DO MQTT =======
const char* mqtt_server = "test.mosquitto.org";
const char* mqtt_topic = "irrigacao/status";


const int sensorPin = 34;
const int bombaPin = 27;


WiFiClient espClient;
PubSubClient client(espClient);


void setup_wifi() {
  delay(10);
  Serial.println("Conectando ao WiFi...");
  WiFi.begin(ssid, password);

  while (WiFi.status() != WL_CONNECTED) {
    delay(500);
    Serial.print(".");
  }

  Serial.println("");
  Serial.println("WiFi conectado!");
  Serial.print("IP: ");
  Serial.println(WiFi.localIP());
}

void reconnect() {
  while (!client.connected()) {
    Serial.print("Conectando ao broker MQTT...");
    if (client.connect("ESP32Client")) {
      Serial.println("conectado!");
    } else {
      Serial.print("Falha, rc=");
      Serial.print(client.state());
      Serial.println(" tentando novamente em 5 segundos");
      delay(5000);
    }
  }
}

void setup() {
  Serial.begin(115200);
  pinMode(bombaPin, OUTPUT);
  digitalWrite(bombaPin, LOW);

  setup_wifi();
  client.setServer(mqtt_server, 1883);
}

void loop() {
  if (!client.connected()) {
    reconnect();
  }
  client.loop();

  int umidade = analogRead(sensorPin);
  Serial.print("Valor da umidade: ");
  Serial.println(umidade);

  if (umidade > 1000) { // Solo seco
    digitalWrite(bombaPin, HIGH);
    client.publish(mqtt_topic, "Solo seco. Bomba ligada.");
    Serial.println("Bomba LIGADA");
  } else {
    digitalWrite(bombaPin, LOW);
    client.publish(mqtt_topic, "Solo úmido. Bomba desligada.");
    Serial.println("Bomba DESLIGADA");
  }

  delay(5000);
}
